[package]
name = "elif-http"
version = "0.8.2"
edition = "2021"
description = "HTTP server core for the elif.rs LLM-friendly web framework"
license = "MIT"
authors = ["krcpa <krcpa@users.noreply.github.com>"]
repository = "https://github.com/krcpa/elif.rs"
homepage = "https://github.com/krcpa/elif.rs"
documentation = "https://docs.rs/elif-http"
keywords = ["web", "framework", "http", "server", "ai"]
categories = ["web-programming", "network-programming"]

[dependencies]
# Framework dependencies
elif-core = { version = "0.6.1", path = "../core" }
elif-auth = { version = "0.4.0", path = "../elif-auth", optional = true }
elif-http-derive = { version = "0.2.0", path = "../elif-http-derive", optional = true }

# HTTP server
axum = { workspace = true, features = ["ws"] }
tower = { workspace = true }
tower-http = { workspace = true, features = ["compression-gzip", "compression-br"] }
hyper = { workspace = true }
http-body-util = { workspace = true }

# WebSocket server
tokio-tungstenite = "0.23"
tungstenite = "0.21"
axum-extra = { version = "0.9", features = ["typed-header"] }
futures-util = "0.3"

# Async runtime
tokio = { version = "1.0", features = ["macros", "rt-multi-thread", "signal", "time", "sync", "net", "fs"] }
async-trait = "0.1"

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
serde_urlencoded = "0.7"

# Utilities
thiserror = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }
log = "0.4"
service-builder = "0.3.0"
regex = "1.10"
once_cell = "1.21"
ctor = "0.2"

# Compression (now using tower-http instead of custom implementation)

# Content negotiation
html-escape = "0.2"

# Security
argon2 = "0.5"


[features]
default = []
auth = ["elif-auth"]
orm = []
derive = ["elif-http-derive"]

[dev-dependencies]
elif-testing = "0.3.0"
tokio-test = "0.4"
tracing-test = "0.2"
once_cell = "1.21"
reqwest = { version = "0.11", features = ["json"] }