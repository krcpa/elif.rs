{
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(./target/debug/elif migrate create:*)",
      "Bash(./target/debug/elif migrate:*)",
      "Bash(./target/debug/elif:*)",
      "Bash(../../elif/target/debug/elif:*)",
      "mcp__gh-projects__create_milestone",
      "mcp__gh-projects__create_issue",
      "mcp__gh-projects__list_labels",
      "Bash(gh repo view:*)",
      "Bash(gh milestone create:*)",
      "Bash(gh issue create:*)",
      "Bash(gh label create:*)",
      "Bash(gh project item-add:*)",
      "Bash(gh project view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh project:*)",
      "Bash(gh auth:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue close:*)",
      "Bash(timeout 30 cargo test -p elif-core module::tests::test_application_lifecycle -- --exact --nocapture)",
      "Bash(gtimeout 30 cargo test -p elif-core module::tests::test_application_lifecycle -- --exact --nocapture)",
      "Bash(gh issue comment:*)",
      "Bash(./target/release/elif:*)",
      "Bash(target/release/elif:*)",
      "Bash(~/.cargo/bin/elif:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(rustc --version)",
      "Bash(gh issue edit:*)",
      "Bash(sed:*)",
      "Bash(RUST_BACKTRACE=1 cargo test test_comprehensive_cors_preflight_handling -p elif-security -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo check --package elif-http --message-format=short)",
      "Bash(gh label:*)",
      "Bash(gh issue reopen:*)",
      "Bash(mv:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh api:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh pr close:*)",
      "Bash(cp:*)",
      "Bash(diff:*)"
    ],
    "deny": []
  }
}