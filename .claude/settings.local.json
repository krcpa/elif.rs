{
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(./target/debug/elif migrate create:*)",
      "Bash(./target/debug/elif migrate:*)",
      "Bash(./target/debug/elif:*)",
      "Bash(../../elif/target/debug/elif:*)",
      "mcp__gh-projects__create_milestone",
      "mcp__gh-projects__create_issue",
      "mcp__gh-projects__list_labels",
      "Bash(gh repo view:*)",
      "Bash(gh milestone create:*)",
      "Bash(gh issue create:*)",
      "Bash(gh label create:*)",
      "Bash(gh project item-add:*)",
      "Bash(gh project view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh project:*)",
      "Bash(gh auth:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue close:*)",
      "Bash(timeout 30 cargo test -p elif-core module::tests::test_application_lifecycle -- --exact --nocapture)",
      "Bash(gtimeout 30 cargo test -p elif-core module::tests::test_application_lifecycle -- --exact --nocapture)",
      "Bash(gh issue comment:*)",
      "Bash(./target/release/elif:*)",
      "Bash(target/release/elif:*)",
      "Bash(~/.cargo/bin/elif:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(rustc --version)",
      "Bash(gh issue edit:*)",
      "Bash(sed:*)",
      "Bash(RUST_BACKTRACE=1 cargo test test_comprehensive_cors_preflight_handling -p elif-security -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo check --package elif-http --message-format=short)",
      "Bash(gh label:*)",
      "Bash(gh issue reopen:*)",
      "Bash(mv:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh api:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh pr close:*)",
      "Bash(cp:*)",
      "Bash(diff:*)",
      "Bash(timeout 60 cargo test --package elif-http --lib)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo build -p elifrs)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo check -p elifrs)",
      "WebFetch(domain:127.0.0.1)",
      "Bash(rustc:*)",
      "Bash(touch:*)",
      "Bash(RUSTFLAGS=\"-A unused-imports\" cargo test -p elif-http-derive ui_fail_tests)",
      "Bash(TRYBUILD=overwrite cargo test ui_tests)",
      "Bash(RUST_BACKTRACE=1 cargo test -p elif-core container::binding::tests::test_profile_conditions)",
      "Bash(TRYBUILD=overwrite cargo test ui_fail_tests -p elif-http-derive)",
      "Bash(TRYBUILD=overwrite cargo test -p elif-http-derive --test ui_tests)",
      "Bash(gh pr edit:*)",
      "Bash(RUSTFLAGS=\"-A unused-imports -A unused-variables\" cargo build --package elifrs)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo run -- --help)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo run -- create --help)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo run --package elifrs -- add --help)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo run --package elifrs -- inspect --help)",
      "Bash(RUSTFLAGS=\"-A warnings\" cargo build --package elifrs)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      "Bash(export DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test)",
      "Bash(export ELIF_ENV=development)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs db setup:*)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs db seed:*)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs db backup:*)",
      "Bash(ELIF_ENV=production DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs db seed --verbose)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs migrate create test_user_table)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs migrate up:*)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs migrate status:*)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs db status:*)",
      "Bash(DATABASE_URL=postgresql://elif_user:elif_pass@localhost:5433/elif_test ./target/debug/elifrs db analyze:*)",
      "Bash(docker exec:*)",
      "Bash(DATABASE_URL='postgresql://elif_user:p@ssw0rd@localhost:5433/elif_test' ./target/debug/elifrs db status:*)",
      "Bash(timeout 3s cargo run -- test --watch --unit)",
      "Bash(../../target/debug/elifrs make service Email --async-methods)",
      "Bash(../../target/debug/elifrs make factory User --count 20 --traits \"Faker,Randomized\")",
      "Bash(../../target/debug/elifrs make module User --services UserService --controllers UserController)",
      "Bash(../../target/debug/elifrs make module UserModule --services UserService --controllers UserController)",
      "Bash(../../target/debug/elifrs make service Payment --module user --async-methods --dependencies \"EmailService,DatabaseService\")",
      "Bash(../../target/debug/elifrs make service:*)",
      "Bash(./test-analyzer)",
      "Bash(/Users/kog/Code/elif/target/debug/elifrs new --non-interactive my-test-app)",
      "Bash(/Users/kog/Code/elif/target/debug/elifrs --help)",
      "Bash(/Users/kog/Code/elif/target/debug/elifrs new --help)",
      "Bash(/Users/kog/Code/elif/target/debug/elifrs new --non-interactive test-app)",
      "WebFetch(domain:crates.io)",
      "Bash(python3:*)",
      "Bash(for:*)",
      "Bash(do echo \"Checking $file:\")",
      "Bash(done)"
    ],
    "deny": []
  }
}